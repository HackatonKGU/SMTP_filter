import subprocess
import time
import psutil
import platform
from pathlib import Path
from core.config import MAILHOG_PATH, MAILHOG_SMTP_PORT, MAILHOG_WEB_PORT, MAILHOG_HOST

class MailHogManager:
    def __init__(self):
        self.process = None
        self.mailhog_path = Path(MAILHOG_PATH)

    def is_running(self) -> bool:
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –∑–∞–ø—É—â–µ–Ω –ª–∏ MailHog, –ø—É—Ç–µ–º –ø—Ä–æ–≤–µ—Ä–∫–∏, —Å–ª—É—à–∞–µ—Ç—Å—è –ª–∏ –µ–≥–æ –≤–µ–±-–ø–æ—Ä—Ç."""
        try:
            # –ö–æ–º–∞–Ω–¥–∞ netstat -ano -p tcp | findstr "8025"
            # —è–≤–ª—è–µ—Ç—Å—è –Ω–∞–¥–µ–∂–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º –¥–ª—è Windows –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ—Ä—Ç.
            cmd = f'netstat -ano -p tcp | findstr ":{MAILHOG_WEB_PORT}"'
            result = subprocess.run(cmd, shell=True, capture_output=True, text=True)
            # –ï—Å–ª–∏ –≤—ã–≤–æ–¥ —Å–æ–¥–µ—Ä–∂–∏—Ç "LISTENING", –∑–Ω–∞—á–∏—Ç –ø–æ—Ä—Ç –∑–∞–Ω—è—Ç –∏ MailHog, —Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ, —Ä–∞–±–æ—Ç–∞–µ—Ç.
            return "LISTENING" in result.stdout
        except Exception:
            return False
    
    def find_mailhog_process(self):
        """–ù–∞—Ö–æ–¥–∏—Ç –ø—Ä–æ—Ü–µ—Å—Å MailHog."""
        for proc in psutil.process_iter(['pid', 'name', 'cmdline']):
            try:
                if 'MailHog' in proc.info['name'] or any('MailHog' in arg for arg in proc.info['cmdline']):
                    return proc
            except (psutil.NoSuchProcess, psutil.AccessDenied):
                continue
        return None
    
    def start(self) -> bool:
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç MailHog."""
        if self.is_running():
            print(f"‚úÖ MailHog —É–∂–µ –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É {MAILHOG_WEB_PORT}")
            return True
        
        if not self.mailhog_path.exists():
            print(f"‚ùå MailHog –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ –ø—É—Ç–∏: {self.mailhog_path}")
            return False
        
        try:
            print(f"üöÄ –ó–∞–ø—É—Å–∫–∞—é MailHog...")
            print(f"   SMTP: {MAILHOG_HOST}:{MAILHOG_SMTP_PORT}")
            print(f"   Web:  http://{MAILHOG_HOST}:{MAILHOG_WEB_PORT}")
            
            # –ó–∞–ø—É—Å–∫–∞–µ–º MailHog —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
            cmd = [
                str(self.mailhog_path),
                "-smtp-bind-addr", f"{MAILHOG_HOST}:{MAILHOG_SMTP_PORT}",
                "-ui-bind-addr", f"{MAILHOG_HOST}:{MAILHOG_WEB_PORT}",
                "-api-bind-addr", f"{MAILHOG_HOST}:{MAILHOG_WEB_PORT}"
            ]
            
            # –ó–∞–ø—É—Å–∫–∞–µ–º –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ
            self.process = subprocess.Popen(
                cmd,
                stdout=subprocess.DEVNULL,
                stderr=subprocess.DEVNULL,
                creationflags=subprocess.CREATE_NEW_PROCESS_GROUP
            )
            
            # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞
            for i in range(10):
                if self.is_running():
                    print(f"‚úÖ MailHog –∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
                    print(f"   –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: http://{MAILHOG_HOST}:{MAILHOG_WEB_PORT}")
                    return True
                time.sleep(1)
                print(f"   –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞... ({i+1}/10)")
            
            print("‚ùå MailHog –Ω–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å")
            return False
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ MailHog: {e}")
            return False
    
    def stop(self) -> bool:
        """–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç MailHog."""
        try:
            # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞—à –ø—Ä–æ—Ü–µ—Å—Å
            if self.process:
                self.process.terminate()
                self.process = None
            
            # –ù–∞—Ö–æ–¥–∏–º –∏ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã MailHog
            proc = self.find_mailhog_process()
            if proc:
                proc.terminate()
                proc.wait(timeout=5)
                print("‚úÖ MailHog –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
                return True
            else:
                print("‚ö†Ô∏è –ü—Ä–æ—Ü–µ—Å—Å MailHog –Ω–µ –Ω–∞–π–¥–µ–Ω")
                return True
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ MailHog: {e}")
            return False
    
    def restart(self) -> bool:
        """–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ—Ç MailHog."""
        print("üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ MailHog...")
        self.stop()
        time.sleep(2)
        return self.start()
    
    def status(self):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç—É—Å MailHog."""
        if self.is_running():
            print(f"‚úÖ MailHog —Ä–∞–±–æ—Ç–∞–µ—Ç:")
            print(f"   SMTP: {MAILHOG_HOST}:{MAILHOG_SMTP_PORT}")
            print(f"   Web:  http://{MAILHOG_HOST}:{MAILHOG_WEB_PORT}")
            
            # –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π
            try:
                response = requests.get(f"http://{MAILHOG_HOST}:{MAILHOG_WEB_PORT}/api/v1/messages?limit=1")
                if response.status_code == 200:
                    data = response.json()
                    print(f"   –°–æ–æ–±—â–µ–Ω–∏–π: {data.get('total', 0)}")
            except:
                pass
        else:
            print("‚ùå MailHog –Ω–µ –∑–∞–ø—É—â–µ–Ω")
    
    def clear_messages(self) -> bool:
        """–û—á–∏—â–∞–µ—Ç –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ MailHog."""
        try:
            response = requests.delete(f"http://{MAILHOG_HOST}:{MAILHOG_WEB_PORT}/api/v1/messages")
            if response.status_code == 200:
                print("‚úÖ –í—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω—ã")
                return True
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π: {response.status_code}")
                return False
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π: {e}")
            return False

def main():
    """–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è MailHog."""
    import sys
    
    manager = MailHogManager()
    
    if len(sys.argv) < 2:
        print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:")
        print("  python mailhog_manager.py start    - –ó–∞–ø—É—Å—Ç–∏—Ç—å MailHog")
        print("  python mailhog_manager.py stop     - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å MailHog")
        print("  python mailhog_manager.py restart  - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å MailHog")
        print("  python mailhog_manager.py status   - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å")
        print("  python mailhog_manager.py clear    - –û—á–∏—Å—Ç–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è")
        return
    
    command = sys.argv[1].lower()
    
    if command == "start":
        manager.start()
    elif command == "stop":
        manager.stop()
    elif command == "restart":
        manager.restart()
    elif command == "status":
        manager.status()
    elif command == "clear":
        manager.clear_messages()
    else:
        print(f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: {command}")

if __name__ == "__main__":
    main()